(load "../../lib/scm/unit.scm")

(define (sum l)
  (fold-left + 0 l))

; l е списък от списъци, x е число. Да се върне сумата от подсписъците в l,
; които съдържат в себе си елемента x.
; Обърнете, че резултатът трябва да е сума от суми. Препоръчвам ви при такива
; задачи да започвате „отдолу нагоре“ - т.е. първо филтрирането на подсписъците
; в l, после сумирането на тези списъци и накрая събирането на получените суми.
; По този начин ще можете да решите задачата на по-малки стъпки.
(define (list-sum l x)
  (sum (map sum (filter (lambda (el) (member x el)) l))))

(assert-equal 21 (list-sum '((1 2 3) (4 3 8) (1 2 7)) 3))
