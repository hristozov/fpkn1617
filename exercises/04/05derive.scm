(load "../../lib/scm/unit.scm")

; Целта на задачата е да се напише процедура (derive f), която връща f'(x).

; derive взима процедура и връща нова процедура. В новополучената процедура
; фиксираме z да е близо до x. По този начин можем да вземем някакво
; приближение на стойността на производната.
(define (derive f)
  (lambda (x)
    (let ((z (+ x 0.001)))
      (/ (- (f x)
            (f z))
         (- x z)))))

; Това е ГРЕШНО решение на задачата. Тук стойността се изчислява директно, а не
; се връща функция (т.е. lambda). Това е груба грешка, която бива санкционирана
; на контролни и изпити.
(define (derive-INCORRECT f x)
  (let ((z (+ x 0.001)))
   (/ (- (f x)
         (f z))
      (- x z))))

(assert-approx 2
               0.01
               ((derive (lambda (x) (* 2 x)))
                1337))
(assert-approx 12
               0.01
               ((derive (lambda (x) (* x x x)))
                2))
