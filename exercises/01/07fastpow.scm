(load "../../lib/scm/unit.scm")

(define (pow2 x)
  (* x x))

; Бързо степенуване.
; Идеята е когато степенният показател n е четен да смятаме x^(n/2) и да вдигаме
; резултата на квадрат. Това ни спестява n/2 операции.
; Използваме помощната функция pow2 за вдигане на втора степен за да не викаме
; два пъти рекурсивно pow (т.е. за да няма "(* (pow ...) (pow...))"). Това може
; да бъде заменено и с просто викане на еxpt.
(define (pow x n)
  (cond
    ((= n 0) 1)
    ((even? n) (pow2 (pow x (/ n 2))))
    (else (* x (pow x (- n 1))))))

(assert= 1 (pow 2 0))
(assert= 2 (pow 2 1))
(assert= 4 (pow 2 2))
(assert= 1024 (pow 2 10))
(assert= 1024 (pow -2 10))
(assert= -2048 (pow -2 11))
