import           Data.List
import           Unit

-- Пермутации на елементите в списък. Използва се delete - част от Data.List.

permute :: Eq a => [a] -> [[a]]
-- Това може би не е съвсем коректно от гледна точка на теория на множествата.
-- Въпреки това, на него се базира цялата рекурсия. Ако искате да избегнете
-- изрично този случай, направете тази имплементация на permute да бъде helper
-- на друг permute, който се „грижи“ за случая с празния списък.
permute [] = [[]]
permute xs = concatMap (\x -> map (x:) (permute $ delete x xs)) xs

main = do {
    assertEqual [[1]] $ permute [1];
    assertEqual [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]] $ permute [1,2,3]
}
